{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nahue\\\\OneDrive\\\\Escritorio\\\\prueba\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nahue\\\\OneDrive\\\\Escritorio\\\\prueba\\\\front\\\\src\\\\componentes\\\\Ficcion2.jsx\";\nimport { Card, Container, Grid, Typography, CardMedia, CardContent, CardActions, Button, IconButton } from \"@mui/material\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport '../hojas-de-estilo/Ficcion.css';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { useParams } from 'react-router-dom';\n\nconst SwipeToSlide2 = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        datos = _useState2[0],\n        setDatos = _useState2[1];\n\n  const params = useParams();\n\n  const cargarDatos = async correo => {\n    const response = await fetch(\"http://localhost:4000/Usuario2/\".concat(correo));\n    const data = await response.json();\n    setDatos(data);\n  };\n\n  useEffect(() => {\n    if (params.correo) {\n      cargarDatos(params.correo);\n    }\n  }, [params.correo]);\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ejemplares = _useState4[0],\n        setEjemplares = _useState4[1];\n\n  const params2 = useParams();\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        genero = _useState6[0],\n        setGenero = _useState6[1]; //cargar las tareas\n\n\n  const cargarTareas = async () => {\n    const response = await fetch('http://localhost:4000/Ejemplares');\n    const data = await response.json();\n    setGenero(data);\n  }; //mostrar las tareas\n\n\n  useEffect(() => {\n    cargarTareas();\n  }, []);\n\n  const getEjemplares = async e => {\n    const response = await fetch(\"http://localhost:4000/Ejemplar2/\".concat(params2.elemento));\n    const jsonData = await response.json();\n    setEjemplares(jsonData);\n  };\n\n  useEffect(() => {\n    if (params2.elemento) {\n      getEjemplares(params2.elemento);\n    }\n  }, [params2.elemento]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    marginBottom: 1,\n    marginTop: 1,\n    fontSize: 30,\n    fontFamily: \"Roboto\",\n    color: \"#ffff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \" Libros disponibles\"), ejemplares ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, ejemplares.map(ejemplar => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      maxWidth: 350\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      maxHeight: 350\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ejemplar.img ? require(\"../imagenes/\".concat(ejemplar.img)) : \"\",\n    className: \"fotografia1\",\n    alt: \"Libro no encontrado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h9\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, ejemplar.titulo), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, \"$\", ejemplar.precioactual)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\".concat(datos.correo, \"/detallejemplar/\").concat(ejemplar.id_ejemplar),\n    className: \"botonverhome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Ver\")))))))) : null));\n};\n\nexport default SwipeToSlide2; //const getEjemplares = async (elemento) => {\n//  const response = await fetch(`http://localhost:4000/Ejemplar2/${elemento}`);\n//const jsonData = await response.json();\n//setEjemplares(jsonData);\n//};","map":{"version":3,"sources":["C:/Users/nahue/OneDrive/Escritorio/prueba/front/src/componentes/Ficcion2.jsx"],"names":["Card","Container","Grid","Typography","CardMedia","CardContent","CardActions","Button","IconButton","React","Component","useState","useEffect","Link","FavoriteIcon","useParams","SwipeToSlide2","datos","setDatos","params","cargarDatos","correo","response","fetch","data","json","ejemplares","setEjemplares","params2","genero","setGenero","cargarTareas","getEjemplares","e","elemento","jsonData","map","ejemplar","maxWidth","display","justifyContent","maxHeight","img","require","titulo","precioactual","id_ejemplar"],"mappings":"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","sourcesContent":["import { Card, Container, Grid, Typography, CardMedia, CardContent, CardActions, Button, IconButton } from \"@mui/material\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport '../hojas-de-estilo/Ficcion.css';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { useParams } from 'react-router-dom';\n\nconst SwipeToSlide2 = () => {\n\n    const [datos, setDatos] = useState ([])\n    const params = useParams();\n\n    const cargarDatos = async (correo) => {\n        const response = await fetch(`http://localhost:4000/Usuario2/${correo}`)\n        const data = await response.json()\n        setDatos(data);\n    };\n\n    useEffect(() => {\n        if (params.correo) {\n            cargarDatos(params.correo)\n        }\n    }, [params.correo])\n\n  const [ejemplares, setEjemplares] = useState();\n  const params2 = useParams();\n\n  const [genero, setGenero] = useState ([\n    ])\n    //cargar las tareas\n    const cargarTareas = async () => {\n        const response = await fetch('http://localhost:4000/Ejemplares')\n        const data = await response.json()\n        setGenero(data);  \n    };\n    //mostrar las tareas\n    useEffect(() => {\n        cargarTareas()\n    }, [])\n\n  const getEjemplares = async (e) => {\n        const response = await fetch(`http://localhost:4000/Ejemplar2/${params2.elemento}`);\n        const jsonData = await response.json();\n        setEjemplares(jsonData);\n  };\n\n  useEffect(() => {\n    if (params2.elemento) {\n        getEjemplares(params2.elemento)\n    }\n    }, [params2.elemento])\n\n  return (\n    <>\n      <Container>\n        <Typography marginBottom={1} marginTop={1} fontSize={30} fontFamily='Roboto' color={\"#ffff\"}> Libros disponibles</Typography>\n        {ejemplares ? (\n          <>\n              <Grid container spacing={2}>\n            {ejemplares.map((ejemplar) => (\n                <Grid item xs={3}>\n                  <Card sx={{ maxWidth: 350}}>\n                    <CardMedia  style={{ display: 'flex', justifyContent: 'center', maxHeight:350 }}>\n                      <img src={ejemplar.img ? require(`../imagenes/${ejemplar.img}`):\"\"} className='fotografia1' alt=\"Libro no encontrado\" />\n                    </CardMedia>\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h9\" component=\"div\">\n                        {ejemplar.titulo}\n                      </Typography>\n                      <Typography gutterBottom variant=\"h6\" component=\"div\">\n                        ${ejemplar.precioactual}\n                      </Typography>\n\n                    </CardContent>\n                    <CardActions>\n                      <Link to={`/${datos.correo}/detallejemplar/${ejemplar.id_ejemplar}`} className=\"botonverhome\">\n                        <Button size=\"small\" variant=\"contained\" color=\"secondary\">Ver</Button>\n                      </Link>\n                      \n                    </CardActions>\n                  </Card>\n                </Grid>\n\n))}\n</Grid>\n          </>\n        ) : null}\n      </Container>\n\n\n    </>\n\n  );\n\n}\n\nexport default SwipeToSlide2;\n\n\n\n//const getEjemplares = async (elemento) => {\n  //  const response = await fetch(`http://localhost:4000/Ejemplar2/${elemento}`);\n    //const jsonData = await response.json();\n    //setEjemplares(jsonData);\n//};"]},"metadata":{},"sourceType":"module"}