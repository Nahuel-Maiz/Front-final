{"ast":null,"code":"import _objectSpread from \"/home/estefania/Documentos/bookstore-front-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/estefania/Documentos/bookstore-front-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/estefania/Documentos/bookstore-front-main/src/componentes/NewRes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid } from '@mui/material';\nimport { Card, CardContent } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport '../hojas-de-estilo/NewRes.css';\nimport { useParams } from 'react-router-dom';\n\nconst NuevaResenia = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        datos = _useState2[0],\n        setDatos = _useState2[1];\n\n  const params = useParams();\n\n  const cargarDatos = async correo => {\n    const response = await fetch(\"http://localhost:4000/Usuario2/\".concat(correo));\n    const data = await response.json();\n    setDatos(data);\n  };\n\n  useEffect(() => {\n    if (params.correo) {\n      cargarDatos(params.correo);\n    }\n  }, [params.correo]);\n\n  let _useParams = useParams(),\n      id_ejemplar = _useParams.id_ejemplar;\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ejemplares1 = _useState4[0],\n        setEjemplares = _useState4[1];\n\n  const getEjemplar = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/Ejemplar/\".concat(id_ejemplar));\n      const jsonData = await response.json();\n      setEjemplares(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getEjemplar();\n  }, []);\n  const titulo = ejemplares1.titulo,\n        sinopsis = ejemplares1.sinopsis,\n        editorial = ejemplares1.editorial,\n        autor = ejemplares1.autor,\n        anioedicion = ejemplares1.anioedicion,\n        tipoencuadernado = ejemplares1.tipoencuadernado,\n        genero = ejemplares1.genero,\n        stock = ejemplares1.stock,\n        precioactual = ejemplares1.precioactual,\n        isbn = ejemplares1.isbn; //console.log(datos.nombreusuario)\n\n  var valor2 = datos.nombreusuario;\n  console.log(valor2);\n  var valor = ejemplares1.isbn;\n  console.log(valor);\n\n  const _useState5 = useState({\n    resenias: \"\",\n    isbn: '',\n    nombreusuario: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        resen = _useState6[0],\n        setResen = _useState6[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(\"http://localhost:4000/Resenia2\", {\n      method: \"POST\",\n      body: JSON.stringify(resen),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n    {\n      window.location.href = \"http://localhost:3000/\".concat(datos.correo, \"/detallejemplar/\").concat(id_ejemplar);\n    }\n  };\n\n  const handleChange = e => setResen(_objectSpread({}, resen, {\n    [e.target.name]: e.target.value\n  }));\n\n  resen.isbn = valor;\n  resen.nombreusuario = valor2;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-newresenia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      mt: 1,\n      backgroundColor: 'transparent',\n      boxShadow: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    marginBottom: -1,\n    fontSize: 20,\n    fontFamily: \"Roboto\",\n    color: \"#000\",\n    marginLeft: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"  \\xA1Danos tu opinion!\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"fullWidth\",\n    variant: \"filled\",\n    label: \"Aqui escribe tu opinion\",\n    multiline: true,\n    rows: 1,\n    color: \"secondary\",\n    sx: {\n      display: 'block',\n      margin: '.5rem 0'\n    },\n    name: \"resenias\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    Button: true,\n    variant: \"contained\",\n    type: \"submit\",\n    disableElevation: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, \"Opinar\")))))))));\n};\n\nexport default NuevaResenia;","map":{"version":3,"sources":["/home/estefania/Documentos/bookstore-front-main/src/componentes/NewRes.jsx"],"names":["React","useState","useEffect","Container","Grid","Card","CardContent","Typography","TextField","Button","useParams","NuevaResenia","datos","setDatos","params","cargarDatos","correo","response","fetch","data","json","id_ejemplar","ejemplares1","setEjemplares","getEjemplar","jsonData","err","console","error","message","titulo","sinopsis","editorial","autor","anioedicion","tipoencuadernado","genero","stock","precioactual","isbn","valor2","nombreusuario","log","valor","resenias","resen","setResen","handleSubmit","e","preventDefault","res","method","body","JSON","stringify","headers","window","location","href","handleChange","target","name","value","mt","backgroundColor","boxShadow","display","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Grid } from '@mui/material';\nimport { Card, CardContent } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport '../hojas-de-estilo/NewRes.css';\nimport {useParams} from 'react-router-dom';\n\nconst NuevaResenia = () => {\n\n    const [datos, setDatos] = useState ([])\n    const params = useParams();\n\n    const cargarDatos = async (correo) => {\n        const response = await fetch(`http://localhost:4000/Usuario2/${correo}`)\n        const data = await response.json()\n        setDatos(data);\n    };\n\n    useEffect(() => {\n        if (params.correo) {\n            cargarDatos(params.correo)\n        }\n    }, [params.correo])\n\n    let { id_ejemplar } = useParams();\n\n    const [ejemplares1, setEjemplares] = useState([]);\n\n    const getEjemplar = async () => {\n        try {\n            const response = await fetch(`http://localhost:4000/Ejemplar/${id_ejemplar}`);\n            const jsonData = await response.json();\n            setEjemplares(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n        getEjemplar();\n    }, []);\n    const {titulo, sinopsis, editorial, autor, anioedicion, tipoencuadernado, genero, stock,  precioactual, isbn} = ejemplares1; \n\n    //console.log(datos.nombreusuario)\n    var valor2 = datos.nombreusuario;\n    console.log(valor2)\n\n    var valor = ejemplares1.isbn;\n    console.log(valor)\n\n    const [resen, setResen] = useState({\n        resenias: \"\",\n        isbn: '',\n        nombreusuario: '',\n    });\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const res = await fetch(\"http://localhost:4000/Resenia2\", {\n            method: \"POST\",\n            body: JSON.stringify(resen),\n            headers: { \"Content-Type\": \"application/json\" },\n        });\n        const data = await res.json();\n        console.log(data);\n        {window.location.href = `http://localhost:3000/${datos.correo}/detallejemplar/${id_ejemplar}`}\n    };\n\n\n    const handleChange = (e) =>\n        setResen({ ...resen, [e.target.name]: e.target.value });\n        resen.isbn = valor\n        resen.nombreusuario = valor2\n        \n\n    return (\n        <>\n            <div className='contenedor-newresenia'>\n                <Container maxWidth=\"400\" >\n                    <Grid\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n\n                    >\n                        <Grid>\n                            <Card sx={{ mt: 1, backgroundColor: 'transparent', boxShadow: 0 }}>\n                                <Typography marginBottom={-1} fontSize={20} fontFamily='Roboto' color={\"#000\"} marginLeft={2} >  ¡Danos tu opinion!</Typography>\n                                <CardContent>\n                                    <form onSubmit={handleSubmit} >\n                                        <TextField fullWidth id=\"fullWidth\"\n                                            variant='filled'\n                                            label='Aqui escribe tu opinion'\n                                            multiline\n                                            rows={1}\n                                            color=\"secondary\"\n                                            sx={{\n                                                display: 'block',\n                                                margin: '.5rem 0'\n                                            }}\n                                            name=\"resenias\"\n                                            onChange={handleChange}\n\n                                        />                                                                    \n                                        <Button Button variant=\"contained\" type='submit' disableElevation color=\"secondary\"  >Opinar</Button>\n                                    </form>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default NuevaResenia;"]},"metadata":{},"sourceType":"module"}